;;; This file is part of Oaklisp.
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; The GNU GPL is available at http://www.gnu.org/licenses/gpl.html
;;; or from the Free Software Foundation, 59 Temple Place - Suite 330,
;;; Boston, MA 02111-1307, USA


;;; Copyright (C) 1988 Kevin J. Lang & Barak A. Pearlmutter

(let ((exit-aux
       (lambda (args)
	 (destructure (status . format-args) args
	   (flush standard-error)
	   (cond ((null? format-args)
		  (format standard-output "~&Oaklisp stopped itself")
		  (when (not (= 0 status))
		    (format standard-output " (status ~D)" status))
		  (format standard-output ".~%"))
		 (else (apply format standard-output format-args)))
	   (flush standard-output)
	   (flush standard-error)
	   (cond ((= 0 status) ((%halt 0)))
		 ((= 1 status) ((%halt 1)))
		 ((= 2 status) ((%halt 2)))
		 ((= 3 status) ((%halt 3)))
		 ((= 4 status) ((%halt 4)))
		 ((= 5 status) ((%halt 5)))
		 ((= 6 status) ((%halt 6)))
		 ((= 7 status) ((%halt 7)))
		 ((= 8 status) ((%halt 8)))
		 ((= 9 status) ((%halt 9)))
		 ((= 10 status) ((%halt 10)))
		 (else
		  (format standard-output
			  "(exit status ~D out of range)~%" status)
		  (flush standard-output)
		  ((%halt 10))))))))

  (define (exit . args)
    (cond ((= 0 (rest-length args))
	   (listify-args exit-aux #*debug-level . args))
	  (else
	   (listify-args exit-aux . args)))))

;;; eof
